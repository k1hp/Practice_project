# –ü–æ–ª—É—á–∏—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±–∞–ª–∞–Ω—Å –º–µ–Ω–µ–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ
# –ø–æ —Å—É—Ç–∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º start –±–∞–ª–∞–Ω—Å
from telebot import types, State
from typing import Optional, Union
from datetime import datetime

from bot.config.settings import bot
from bot.config.config_data import CommonButtons, BalanceData
from bot.core.states.common import UserState
from bot.core.utils.helpers import (
    transition_need_state,
    transition_remove_keyboard,
    exit_to_navigation,
)
from database.crud import (
    compile_rating_string,
    get_balance,
    get_username,
    update_balance,
)


@bot.message_handler(
    state=UserState.profile,
    func=lambda message: message.text == CommonButtons.profile["info"],
)
def profile(message: types.Message):
    bot.send_message(
        message.chat.id,
        text=f"üóÉÔ∏è –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\nüêµ Username: {get_username(message.chat.id)}\nüí∞ Balance: {get_balance(message.chat.id)}",
    )


@bot.message_handler(
    state=UserState.profile,
    func=lambda message: message.text == CommonButtons.profile["replenish"],
)
def replenish(message: types.Message):
    if get_balance(message.chat.id) < BalanceData.start:
        update_balance(message.chat.id, BalanceData.start)
        bot.send_message(
            message.chat.id, text="–ë–∞–ª–∞–Ω—Å –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω.\n–ü—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã."
        )
    else:
        bot.send_message(
            message.chat.id,
            text=f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤–∞—à –±–∞–ª–∞–Ω—Å —è–≤–ª—è–µ—Ç—Å—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –¥–ª—è –∏–≥—Ä—ã.",
        )
    exit_to_navigation(message.chat.id)
