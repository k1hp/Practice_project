from telebot import types

from bot.core.keyboards.universal import UniversalReplyKeyboard
from bot.core.states.common import UserState
from bot.core.utils.helpers import transition_need_state
from bot.config.settings import bot, logger
from bot.config.config_data import CommonButtons
from database.crud import get_balance, add_new_user


@bot.message_handler(commands=["start"])
def handle_start(message: types.Message):
    """
    –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    :param message:
    :return:
    """
    if bot.get_state(message.from_user.id, message.chat.id) is None:
        logger.info(f"Start user: {message.from_user.username}")
        add_new_user(message=message)
        bot.set_state(message.chat.id, state=UserState.navigation)
        bot.send_message(
            message.chat.id,
            text="üé∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üé≤",
            reply_markup=UniversalReplyKeyboard(
                buttons=CommonButtons.navigation.values()
            ).markup,
        )

    return


@bot.message_handler(commands=["navigation"])
def handle_navigation(message: types.Message):
    if bot.get_state(message.from_user.id, message.chat.id):
        # –ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        user_balance = get_balance(message.chat.id)
        transition_need_state(
            message.chat.id,
            need_state=UserState.navigation,
            text=f"Navigation\nYour balance: {f"${user_balance}" if user_balance else "$0"}",
            buttons=CommonButtons.navigation.values(),
        )


@bot.callback_query_handler(func=lambda call: call.data == "ignore")
def ignore_callback(call):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É—Å—Ç—ã—Ö –∫–Ω–æ–ø–æ–∫
    :param call:
    :return:
    """
    bot.answer_callback_query(call.id)  # –ü—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
